import React,{useEffect,useMemo,useState,useRef,useCallback}from'react';import{Button,Dropdown,Tooltip}from'dptd';import useMaterial3DCore from'../hooks/core';import{useButtonControlStore}from'../store/buttonControlStore';import BondType from'../icons/bond-type.svg';import styles from'./index.module.less';const areEqual=(prevProps:any,nextProps:any)=>prevProps.uniqueId===nextProps.uniqueId;export const MaterialToolbar:React.FC<{disabled?:boolean}>=React.memo(function MaterialToolbar(props:any){const{uniqueId}=props;const{lightPluginRef,coreChangeSubjectRef,bondVisibleRef,}=useMaterial3DCore();const{bondStatus,setBondStatus,}=useButtonControlStore();useEffect(()=>{const subscription=coreChangeSubjectRef.current.subscribe(core=>{subscriptionRef.current?.unsubscribe();subscriptionRef.current=null});return()=>{subscription.unsubscribe()}},[]);useEffect(()=>{console.log('uniqueId',uniqueId)},[uniqueId]);const subscriptionRef=useRef<any>(null);return(<div className={styles.toolbarContainer}key={uniqueId}><div className={styles.toolbar}><div className="flex items-center wrap"><Tooltip trigger={['click','hover']}overlay={"计算化学键"}><Button type="text"className={styles['tool-btn']}onClick={()=>{const representation=uniqueId.current?.managers.representation;if(!representation){return}representation.hideBond=bondVisibleRef.current=!representation.hideBond;setBondStatus(bondVisibleRef.current)}}><span><img src={BondType}className={styles['tool-icon']}width={16}height={16}color={bondStatus?'#020C1A':'#3b45e5'}/></span></Button></Tooltip></div></div></div>)},areEqual);